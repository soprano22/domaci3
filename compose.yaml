name: 'xx20220123-app'
services:
  backend:
    build: ./backend
    container_name: xy20220123-back
    env_file:
      - ./env/backend.env
    networks:
      - app-network
    ports:
      - "3000:3000"
    volumes:
      - ./backend:app/
      - /app/node_modules
    depends_on:
      database:
        condition: service_healthy
  frontend:
    build: ./frontend
    container_name: xx20220123-front
    networks:
      - app-network
    ports:
      - "5000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
  database:
    image: mysql:latest
    container_name: xx20220123-db
    env_file:
      - ./env/mysql.env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "student", "--password=student"]
      interval: 10s
      timeout: 10s
      retries: 6
    networks:
      - app-network
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sq
      - ./db/my.cnf:/etc/mysql/conf.d/my-custom.cnf:ro
networks:
  app-network:
    driver: bridge
volumes:
  mysql-data:
